{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { settings } from 'carbon-components';\nimport { View16, ViewOff16, WarningFilled16 } from '@carbon/icons-react';\nimport { textInputProps } from './util';\nvar prefix = settings.prefix;\nexport default function PasswordInput(_ref) {\n  var _classNames, _classNames2, _classNames4;\n\n  var labelText = _ref.labelText,\n      className = _ref.className,\n      id = _ref.id,\n      placeholder = _ref.placeholder,\n      _onChange = _ref.onChange,\n      _onClick = _ref.onClick,\n      hideLabel = _ref.hideLabel,\n      invalid = _ref.invalid,\n      invalidText = _ref.invalidText,\n      helperText = _ref.helperText,\n      light = _ref.light,\n      _ref$tooltipPosition = _ref.tooltipPosition,\n      tooltipPosition = _ref$tooltipPosition === void 0 ? 'bottom' : _ref$tooltipPosition,\n      _ref$tooltipAlignment = _ref.tooltipAlignment,\n      tooltipAlignment = _ref$tooltipAlignment === void 0 ? 'center' : _ref$tooltipAlignment,\n      _ref$hidePasswordLabe = _ref.hidePasswordLabel,\n      hidePasswordLabel = _ref$hidePasswordLabe === void 0 ? 'Hide password' : _ref$hidePasswordLabe,\n      _ref$showPasswordLabe = _ref.showPasswordLabel,\n      showPasswordLabel = _ref$showPasswordLabe === void 0 ? 'Show password' : _ref$showPasswordLabe,\n      size = _ref.size,\n      other = _objectWithoutProperties(_ref, [\"labelText\", \"className\", \"id\", \"placeholder\", \"onChange\", \"onClick\", \"hideLabel\", \"invalid\", \"invalidText\", \"helperText\", \"light\", \"tooltipPosition\", \"tooltipAlignment\", \"hidePasswordLabel\", \"showPasswordLabel\", \"size\"]);\n\n  var _useState = useState('password'),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputType = _useState2[0],\n      setInputType = _useState2[1];\n\n  var togglePasswordVisibility = function togglePasswordVisibility() {\n    return setInputType(inputType === 'password' ? 'text' : 'password');\n  };\n\n  var errorId = id + '-error-msg';\n  var textInputClasses = classNames(\"\".concat(prefix, \"--text-input\"), \"\".concat(prefix, \"--password-input\"), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--light\"), light), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--invalid\"), invalid), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--\").concat(size), size), _classNames));\n\n  var sharedTextInputProps = _objectSpread({\n    id: id,\n    onChange: function onChange(evt) {\n      if (!other.disabled) {\n        _onChange(evt);\n      }\n    },\n    onClick: function onClick(evt) {\n      if (!other.disabled) {\n        _onClick(evt);\n      }\n    },\n    placeholder: placeholder,\n    type: inputType,\n    className: textInputClasses\n  }, other);\n\n  var labelClasses = classNames(\"\".concat(prefix, \"--label\"), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--visually-hidden\"), hideLabel), _defineProperty(_classNames2, \"\".concat(prefix, \"--label--disabled\"), other.disabled), _classNames2));\n  var helperTextClasses = classNames(\"\".concat(prefix, \"--form__helper-text\"), _defineProperty({}, \"\".concat(prefix, \"--form__helper-text--disabled\"), other.disabled));\n  var label = labelText ? React.createElement(\"label\", {\n    htmlFor: id,\n    className: labelClasses\n  }, labelText) : null;\n  var error = invalid ? React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--form-requirement\"),\n    id: errorId\n  }, invalidText) : null;\n  var passwordIsVisible = inputType === 'text';\n  var passwordVisibilityIcon = passwordIsVisible ? React.createElement(ViewOff16, {\n    className: \"\".concat(prefix, \"--icon-visibility-off\")\n  }) : React.createElement(View16, {\n    className: \"\".concat(prefix, \"--icon-visibility-on\")\n  });\n  var passwordVisibilityToggleClasses = classNames(\"\".concat(prefix, \"--text-input--password__visibility__toggle\"), \"\".concat(prefix, \"--btn--icon-only\"), \"\".concat(prefix, \"--tooltip__trigger\"), \"\".concat(prefix, \"--tooltip--a11y\"), (_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefix, \"--tooltip--\").concat(tooltipPosition), tooltipPosition), _defineProperty(_classNames4, \"\".concat(prefix, \"--tooltip--align-\").concat(tooltipAlignment), tooltipAlignment), _classNames4));\n  var input = React.createElement(React.Fragment, null, React.createElement(\"input\", _extends({}, textInputProps({\n    invalid: invalid,\n    sharedTextInputProps: sharedTextInputProps,\n    errorId: errorId\n  }), {\n    \"data-toggle-password-visibility\": inputType === 'password'\n  })), React.createElement(\"button\", {\n    type: \"button\",\n    className: passwordVisibilityToggleClasses,\n    onClick: togglePasswordVisibility\n  }, React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, passwordIsVisible ? hidePasswordLabel : showPasswordLabel), passwordVisibilityIcon));\n  var helper = helperText ? React.createElement(\"div\", {\n    className: helperTextClasses\n  }, helperText) : null;\n  return React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--form-item \").concat(prefix, \"--text-input-wrapper \").concat(prefix, \"--password-input-wrapper\")\n  }, label, helper, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--text-input__field-wrapper\"),\n    \"data-invalid\": invalid || null\n  }, invalid && React.createElement(WarningFilled16, {\n    className: \"\".concat(prefix, \"--text-input__invalid-icon\")\n  }), input), error);\n}\nPasswordInput.propTypes = {\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * <input> node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally provide the default value of the <input>\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide a unique identifier for the input field\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * Optionally provide an `onChange` handler that is called whenever <input>\n   * is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * <input> is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify the placeholder attribute for the <input>\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Provide the current value of the <input>\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether or not the underlying label is visually hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.string,\n\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * Specify light version or default version of this control\n   */\n  light: PropTypes.bool,\n\n  /**\n   * Specify the direction of the tooltip for icon-only buttons.\n   * Can be either top, right, bottom, or left.\n   */\n  tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\n   * Specify the alignment of the tooltip to the icon-only button.\n   * Can be one of: start, center, or end.\n   */\n  tooltipAlignment: PropTypes.oneOf(['start', 'center', 'end']),\n\n  /**\n   * \"Hide password\" tooltip text on password visibility toggle\n   */\n  hidePasswordLabel: PropTypes.string,\n\n  /**\n   * \"Show password\" tooltip text on password visibility toggle\n   */\n  showPasswordLabel: PropTypes.string,\n\n  /**\n   * Specify the size of the Text Input. Currently supports either `small` or `large` as an option. If omitted, defaults to standard size\n   */\n  size: PropTypes.string\n};\nPasswordInput.defaultProps = {\n  className: '${prefix}--text__input',\n  disabled: false,\n  onChange: function onChange() {},\n  onClick: function onClick() {},\n  invalid: false,\n  invalidText: '',\n  helperText: '',\n  light: false,\n  size: ''\n};","map":{"version":3,"sources":["/Users/mayarashwan/Desktop/BootCamp/TODO-List/client/node_modules/carbon-components-react/es/components/TextInput/PasswordInput.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","toString","_arr","_n","_d","_e","undefined","_i","_s","next","done","err","Array","isArray","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","React","useState","classNames","PropTypes","settings","View16","ViewOff16","WarningFilled16","textInputProps","prefix","PasswordInput","_ref","_classNames","_classNames2","_classNames4","labelText","className","id","placeholder","_onChange","onChange","_onClick","onClick","hideLabel","invalid","invalidText","helperText","light","_ref$tooltipPosition","tooltipPosition","_ref$tooltipAlignment","tooltipAlignment","_ref$hidePasswordLabe","hidePasswordLabel","_ref$showPasswordLabe","showPasswordLabel","size","other","_useState","_useState2","inputType","setInputType","togglePasswordVisibility","errorId","textInputClasses","concat","sharedTextInputProps","evt","disabled","type","labelClasses","helperTextClasses","label","createElement","htmlFor","error","passwordIsVisible","passwordVisibilityIcon","passwordVisibilityToggleClasses","input","Fragment","helper","propTypes","string","defaultValue","oneOfType","number","bool","isRequired","node","func","oneOf","defaultProps"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { settings } from 'carbon-components';\nimport { View16, ViewOff16, WarningFilled16 } from '@carbon/icons-react';\nimport { textInputProps } from './util';\nvar prefix = settings.prefix;\nexport default function PasswordInput(_ref) {\n  var _classNames, _classNames2, _classNames4;\n\n  var labelText = _ref.labelText,\n      className = _ref.className,\n      id = _ref.id,\n      placeholder = _ref.placeholder,\n      _onChange = _ref.onChange,\n      _onClick = _ref.onClick,\n      hideLabel = _ref.hideLabel,\n      invalid = _ref.invalid,\n      invalidText = _ref.invalidText,\n      helperText = _ref.helperText,\n      light = _ref.light,\n      _ref$tooltipPosition = _ref.tooltipPosition,\n      tooltipPosition = _ref$tooltipPosition === void 0 ? 'bottom' : _ref$tooltipPosition,\n      _ref$tooltipAlignment = _ref.tooltipAlignment,\n      tooltipAlignment = _ref$tooltipAlignment === void 0 ? 'center' : _ref$tooltipAlignment,\n      _ref$hidePasswordLabe = _ref.hidePasswordLabel,\n      hidePasswordLabel = _ref$hidePasswordLabe === void 0 ? 'Hide password' : _ref$hidePasswordLabe,\n      _ref$showPasswordLabe = _ref.showPasswordLabel,\n      showPasswordLabel = _ref$showPasswordLabe === void 0 ? 'Show password' : _ref$showPasswordLabe,\n      size = _ref.size,\n      other = _objectWithoutProperties(_ref, [\"labelText\", \"className\", \"id\", \"placeholder\", \"onChange\", \"onClick\", \"hideLabel\", \"invalid\", \"invalidText\", \"helperText\", \"light\", \"tooltipPosition\", \"tooltipAlignment\", \"hidePasswordLabel\", \"showPasswordLabel\", \"size\"]);\n\n  var _useState = useState('password'),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputType = _useState2[0],\n      setInputType = _useState2[1];\n\n  var togglePasswordVisibility = function togglePasswordVisibility() {\n    return setInputType(inputType === 'password' ? 'text' : 'password');\n  };\n\n  var errorId = id + '-error-msg';\n  var textInputClasses = classNames(\"\".concat(prefix, \"--text-input\"), \"\".concat(prefix, \"--password-input\"), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--light\"), light), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--invalid\"), invalid), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--\").concat(size), size), _classNames));\n\n  var sharedTextInputProps = _objectSpread({\n    id: id,\n    onChange: function onChange(evt) {\n      if (!other.disabled) {\n        _onChange(evt);\n      }\n    },\n    onClick: function onClick(evt) {\n      if (!other.disabled) {\n        _onClick(evt);\n      }\n    },\n    placeholder: placeholder,\n    type: inputType,\n    className: textInputClasses\n  }, other);\n\n  var labelClasses = classNames(\"\".concat(prefix, \"--label\"), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--visually-hidden\"), hideLabel), _defineProperty(_classNames2, \"\".concat(prefix, \"--label--disabled\"), other.disabled), _classNames2));\n  var helperTextClasses = classNames(\"\".concat(prefix, \"--form__helper-text\"), _defineProperty({}, \"\".concat(prefix, \"--form__helper-text--disabled\"), other.disabled));\n  var label = labelText ? React.createElement(\"label\", {\n    htmlFor: id,\n    className: labelClasses\n  }, labelText) : null;\n  var error = invalid ? React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--form-requirement\"),\n    id: errorId\n  }, invalidText) : null;\n  var passwordIsVisible = inputType === 'text';\n  var passwordVisibilityIcon = passwordIsVisible ? React.createElement(ViewOff16, {\n    className: \"\".concat(prefix, \"--icon-visibility-off\")\n  }) : React.createElement(View16, {\n    className: \"\".concat(prefix, \"--icon-visibility-on\")\n  });\n  var passwordVisibilityToggleClasses = classNames(\"\".concat(prefix, \"--text-input--password__visibility__toggle\"), \"\".concat(prefix, \"--btn--icon-only\"), \"\".concat(prefix, \"--tooltip__trigger\"), \"\".concat(prefix, \"--tooltip--a11y\"), (_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefix, \"--tooltip--\").concat(tooltipPosition), tooltipPosition), _defineProperty(_classNames4, \"\".concat(prefix, \"--tooltip--align-\").concat(tooltipAlignment), tooltipAlignment), _classNames4));\n  var input = React.createElement(React.Fragment, null, React.createElement(\"input\", _extends({}, textInputProps({\n    invalid: invalid,\n    sharedTextInputProps: sharedTextInputProps,\n    errorId: errorId\n  }), {\n    \"data-toggle-password-visibility\": inputType === 'password'\n  })), React.createElement(\"button\", {\n    type: \"button\",\n    className: passwordVisibilityToggleClasses,\n    onClick: togglePasswordVisibility\n  }, React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, passwordIsVisible ? hidePasswordLabel : showPasswordLabel), passwordVisibilityIcon));\n  var helper = helperText ? React.createElement(\"div\", {\n    className: helperTextClasses\n  }, helperText) : null;\n  return React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--form-item \").concat(prefix, \"--text-input-wrapper \").concat(prefix, \"--password-input-wrapper\")\n  }, label, helper, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--text-input__field-wrapper\"),\n    \"data-invalid\": invalid || null\n  }, invalid && React.createElement(WarningFilled16, {\n    className: \"\".concat(prefix, \"--text-input__invalid-icon\")\n  }), input), error);\n}\nPasswordInput.propTypes = {\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * <input> node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally provide the default value of the <input>\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide a unique identifier for the input field\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * Optionally provide an `onChange` handler that is called whenever <input>\n   * is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * <input> is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify the placeholder attribute for the <input>\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Provide the current value of the <input>\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether or not the underlying label is visually hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.string,\n\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * Specify light version or default version of this control\n   */\n  light: PropTypes.bool,\n\n  /**\n   * Specify the direction of the tooltip for icon-only buttons.\n   * Can be either top, right, bottom, or left.\n   */\n  tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\n   * Specify the alignment of the tooltip to the icon-only button.\n   * Can be one of: start, center, or end.\n   */\n  tooltipAlignment: PropTypes.oneOf(['start', 'center', 'end']),\n\n  /**\n   * \"Hide password\" tooltip text on password visibility toggle\n   */\n  hidePasswordLabel: PropTypes.string,\n\n  /**\n   * \"Show password\" tooltip text on password visibility toggle\n   */\n  showPasswordLabel: PropTypes.string,\n\n  /**\n   * Specify the size of the Text Input. Currently supports either `small` or `large` as an option. If omitted, defaults to standard size\n   */\n  size: PropTypes.string\n};\nPasswordInput.defaultProps = {\n  className: '${prefix}--text__input',\n  disabled: false,\n  onChange: function onChange() {},\n  onClick: function onClick() {},\n  invalid: false,\n  invalidText: '',\n  helperText: '',\n  light: false,\n  size: ''\n};"]},"metadata":{},"sourceType":"module"}