{"ast":null,"code":"var _jsxFileName = \"/Users/mayarashwan/Desktop/BootCamp/TODO-List/client/src/Components/Todo.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Button, TextInput } from \"carbon-components-react\";\nimport { connect } from 'react-redux';\nimport { Removetodo, editTodo } from '../action/todos';\n\nclass Todo extends Component {\n  //console.log(props.todos);\n  constructor() {\n    super();\n    this.state = {\n      editing: false,\n      id: '',\n      index: ''\n    };\n  }\n\n  handleEditing(event) {\n    //console.log(todo.id);\n    this.setState({\n      editing: true,\n      id: this.props.id,\n      index: this.props.index\n    });\n    var item = event.target.value; //  this.flag.editing=true ;\n    //  console.log(this.flag.editing);\n  }\n\n  handleEditingDone(event) {\n    console.log(this.props.id);\n\n    if (event.keyCode === 13) {\n      // submit\n      this.setState({\n        editing: false\n      });\n      var item = event.target.value;\n\n      if (item) {\n        var todo = [{\n          index: this.props.index,\n          item: item\n        }];\n        console.log('done', todo); //this.setState( {id: Number(new Date()),\n        //      item:item}\n        //})\n        //  this.props.onHistory.push('/')\n\n        var edit = this.props;\n        var index = this.props.id;\n        var update = todo[0].item;\n        var index = this.props.index;\n        edit.dispatch(editTodo(todo[0])); //edit.dispatch(editTodo(index,update));\n      }\n    }\n  }\n\n  handleEditingChange(event) {\n    //console.log(this.props.index);\n    var item = event.target.value;\n\n    if (item) {\n      var todo = [{\n        id: this.props.id,\n        item: item\n      }]; //    console.log('Add', todo);\n      //this.setState( {id: Number(new Date()),\n      //      item:item}\n      //})\n      //  this.props.onHistory.push('/')\n    }\n  }\n\n  render() {\n    const todo = this.props;\n    const id = todo.id;\n    const index = todo.index; //const todo=this.props.todo\n\n    console.log(\"delete\");\n    console.log(todo.index);\n    console.log(\"editing\");\n    var viewStyle = {};\n    var editStyle = {};\n    console.log(\"editing\");\n\n    if (this.state.editing) {\n      viewStyle.display = 'none';\n    } else {\n      editStyle.display = 'none';\n    }\n\n    console.log(todo);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"landing-page__p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: viewStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/todo/${todo.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, \" \", todo.item, \" \"), /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: () => {\n        todo.dispatch(Removetodo({\n          index\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, \" Remove \"), /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: this.handleEditing.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, \" Edit \")), /*#__PURE__*/React.createElement(\"div\", {\n      style: editStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/todo/${todo.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      onChange: this.handleChange,\n      onKeyDown: this.handleEditingDone.bind(this),\n      onChange: this.handleEditingChange.bind(this),\n      id: \"test2\",\n      labelText: \"Add your new item\",\n      placeholder: \"\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 31\n      }\n    })));\n  }\n\n}\n/*\nconst mapDispatchToProps = dispatch => ({\n\n    delete_action: (id) => dispatch(Removetodo(id))\n})\n*/\n\n\nexport default connect()(Todo);\n/*\nconst Todo = ({ id, item }) => (\n    <div>\n    <div className=\"landing-page__p\">\n            <div >\n          <Link to=  {`/todo/${id}`}/>\n            <p> {item} </p>\n            <Button size='small' onClick = { () => {\n              //  dispatch(removeTodo({ id }));\n          //  console.log(todo.description)\n        }}> Remove </Button>\n\n        <Button size='small' > Edit </Button>\n            </div>\n            <div >\n\n                        <TextInput\n                          id=\"test2\"\n                          labelText=\"Add your new item\"\n                          placeholder=\"\"\n                          size=\"sm\"\n                        />\n            </div>\n          </div>\n    }\n    </div>\n);\n\nexport default connect()(Todo);\n*/\n//onKeyDown={this.handleEditingDone.bind(this)}\n//onChange={this.handleEditingChange.bind(this)}\n//style={editStyle}","map":{"version":3,"sources":["/Users/mayarashwan/Desktop/BootCamp/TODO-List/client/src/Components/Todo.js"],"names":["React","Component","PropTypes","Link","Button","TextInput","connect","Removetodo","editTodo","Todo","constructor","state","editing","id","index","handleEditing","event","setState","props","item","target","value","handleEditingDone","console","log","keyCode","todo","edit","update","dispatch","handleEditingChange","render","viewStyle","editStyle","display","bind","handleChange"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\nimport { Button ,TextInput} from \"carbon-components-react\";\n\nimport { connect } from 'react-redux';\nimport { Removetodo,editTodo } from '../action/todos';\n\n class Todo extends Component {\n  //console.log(props.todos);\n  constructor () {\n   super();\n    this.state = { editing: false,id:'',index:'' }\n\n\n}\n\n  handleEditing (event) {\n    //console.log(todo.id);\n    this.setState({ editing:  true,id:this.props.id , index:this.props.index});\n    var item = event.target.value;\n\n  //  this.flag.editing=true ;\n  //  console.log(this.flag.editing);\n\n  }\n\n  handleEditingDone (event) {\n    console.log(this.props.id);\n\n    if (event.keyCode === 13 ) { // submit\n    this.setState({ editing:  false });\n\n\n  var item = event.target.value;\n  if(item ){\n  var todo= [{index: this.props.index,item:item}];\n            console.log('done', todo);\n//this.setState( {id: Number(new Date()),\n//      item:item}\n//})\n//  this.props.onHistory.push('/')\nvar edit=this.props\nvar index=this.props.id\nvar update=todo[0].item\nvar index= this.props.index\nedit.dispatch(editTodo(todo[0]));\n\n  //edit.dispatch(editTodo(index,update));\n\n\n  }\n    }\n\n}\n  handleEditingChange (event) {\n    //console.log(this.props.index);\n    var item = event.target.value;\n\n    if(item ){\n    var todo= [{id: this.props.id,item:item}];\n          //    console.log('Add', todo);\n  //this.setState( {id: Number(new Date()),\n  //      item:item}\n  //})\n  //  this.props.onHistory.push('/')\n    }\n\n}\n\nrender() {\n  const todo = this.props\n  const id=todo.id\n  const index=todo.index\n//const todo=this.props.todo\nconsole.log(\"delete\");\n\nconsole.log(todo.index);\n\nconsole.log(\"editing\");\n\nvar viewStyle = {};\nvar editStyle = {};\nconsole.log(\"editing\");\n\n\n    if (this.state.editing) {\n      viewStyle.display = 'none';\n    } else {\n      editStyle.display = 'none';\n    }\nconsole.log(todo);\n          return<div className=\"landing-page__p\">\n                  <div style={viewStyle}>\n                <Link to=  {`/todo/${todo.id}`}/>\n                  <p> {todo.item} </p>\n                  <Button size='small' onClick={() => {\n            todo.dispatch(Removetodo({ index }));\n        }}> Remove </Button>\n\n              <Button size='small' onClick ={this.handleEditing.bind(this)\n\n              }> Edit </Button>\n                  </div>\n                  <div style={editStyle}>\n                  <Link to=  {`/todo/${todo.id}`}/>\n                              <TextInput onChange={this.handleChange}\n                              onKeyDown={this.handleEditingDone.bind(this)}\n                      onChange={this.handleEditingChange.bind(this)}\n                                id=\"test2\"\n                                labelText=\"Add your new item\"\n                                placeholder=\"\"\n                                size=\"sm\"\n                              />\n                  </div>\n                </div>\n}\n}\n/*\nconst mapDispatchToProps = dispatch => ({\n\n    delete_action: (id) => dispatch(Removetodo(id))\n})\n*/\n\nexport default connect()(Todo);\n/*\nconst Todo = ({ id, item }) => (\n    <div>\n    <div className=\"landing-page__p\">\n            <div >\n          <Link to=  {`/todo/${id}`}/>\n            <p> {item} </p>\n            <Button size='small' onClick = { () => {\n              //  dispatch(removeTodo({ id }));\n          //  console.log(todo.description)\n        }}> Remove </Button>\n\n        <Button size='small' > Edit </Button>\n            </div>\n            <div >\n\n                        <TextInput\n                          id=\"test2\"\n                          labelText=\"Add your new item\"\n                          placeholder=\"\"\n                          size=\"sm\"\n                        />\n            </div>\n          </div>\n    }\n    </div>\n);\n\nexport default connect()(Todo);\n*/\n\n//onKeyDown={this.handleEditingDone.bind(this)}\n//onChange={this.handleEditingChange.bind(this)}\n//style={editStyle}\n"]},"metadata":{},"sourceType":"module"}