{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nvar prefix = settings.prefix;\n\nvar SideNavItem = function SideNavItem(_ref) {\n  var _cx;\n\n  var customClassName = _ref.className,\n      children = _ref.children,\n      _ref$large = _ref.large,\n      large = _ref$large === void 0 ? false : _ref$large;\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__item\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__item--large\"), large), _defineProperty(_cx, customClassName, !!customClassName), _cx));\n  return React.createElement(\"li\", {\n    className: className\n  }, children);\n};\n\nSideNavItem.propTypes = {\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Provide a single icon as the child to `SideNavIcon` to render in the\n   * container\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Specify if this is a large variation of the SideNavItem\n   */\n  large: PropTypes.bool\n};\nexport default SideNavItem;","map":{"version":3,"sources":["/Users/mayarashwan/Desktop/BootCamp/TODO-List/client/node_modules/carbon-components-react/es/components/UIShell/SideNavItem.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","settings","cx","PropTypes","React","prefix","SideNavItem","_ref","_cx","customClassName","className","children","_ref$large","large","concat","createElement","propTypes","string","node","isRequired","bool"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;AAEjN;;;;;;;;AAMA,SAASQ,QAAT,QAAyB,mBAAzB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAIC,MAAM,GAAGJ,QAAQ,CAACI,MAAtB;;AAEA,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AAC3C,MAAIC,GAAJ;;AAEA,MAAIC,eAAe,GAAGF,IAAI,CAACG,SAA3B;AAAA,MACIC,QAAQ,GAAGJ,IAAI,CAACI,QADpB;AAAA,MAEIC,UAAU,GAAGL,IAAI,CAACM,KAFtB;AAAA,MAGIA,KAAK,GAAGD,UAAU,KAAK,KAAK,CAApB,GAAwB,KAAxB,GAAgCA,UAH5C;AAIA,MAAIF,SAAS,GAAGR,EAAE,EAAEM,GAAG,GAAG,EAAN,EAAUhB,eAAe,CAACgB,GAAD,EAAM,GAAGM,MAAH,CAAUT,MAAV,EAAkB,kBAAlB,CAAN,EAA6C,IAA7C,CAAzB,EAA6Eb,eAAe,CAACgB,GAAD,EAAM,GAAGM,MAAH,CAAUT,MAAV,EAAkB,yBAAlB,CAAN,EAAoDQ,KAApD,CAA5F,EAAwJrB,eAAe,CAACgB,GAAD,EAAMC,eAAN,EAAuB,CAAC,CAACA,eAAzB,CAAvK,EAAkND,GAApN,EAAlB;AACA,SAAOJ,KAAK,CAACW,aAAN,CAAoB,IAApB,EAA0B;AAC/BL,IAAAA,SAAS,EAAEA;AADoB,GAA1B,EAEJC,QAFI,CAAP;AAGD,CAXD;;AAaAL,WAAW,CAACU,SAAZ,GAAwB;AACtB;;;AAGAN,EAAAA,SAAS,EAAEP,SAAS,CAACc,MAJC;;AAMtB;;;;AAIAN,EAAAA,QAAQ,EAAER,SAAS,CAACe,IAAV,CAAeC,UAVH;;AAYtB;;;AAGAN,EAAAA,KAAK,EAAEV,SAAS,CAACiB;AAfK,CAAxB;AAiBA,eAAed,WAAf","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nvar prefix = settings.prefix;\n\nvar SideNavItem = function SideNavItem(_ref) {\n  var _cx;\n\n  var customClassName = _ref.className,\n      children = _ref.children,\n      _ref$large = _ref.large,\n      large = _ref$large === void 0 ? false : _ref$large;\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__item\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__item--large\"), large), _defineProperty(_cx, customClassName, !!customClassName), _cx));\n  return React.createElement(\"li\", {\n    className: className\n  }, children);\n};\n\nSideNavItem.propTypes = {\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Provide a single icon as the child to `SideNavIcon` to render in the\n   * container\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Specify if this is a large variation of the SideNavItem\n   */\n  large: PropTypes.bool\n};\nexport default SideNavItem;"]},"metadata":{},"sourceType":"module"}