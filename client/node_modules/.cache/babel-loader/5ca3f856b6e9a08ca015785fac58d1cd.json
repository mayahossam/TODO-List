{"ast":null,"code":"import axios from '../axios/axios';\nimport { GET_Todo, Remove_Todo } from '../constants/actionTypes';\n\nfunction getTodos(todos) {\n  console.log(\"todos\");\n  console.log(todos);\n  return {\n    type: 'GET_Todo',\n    todos: todos\n  };\n}\n\nexport function Removetodo() {\n  return dispatch => {\n    return axios.delete(`books/${id}`, {\n      headers: {\n        'csrf-token': 'casw',\n        'x-Gateway-Apikey': 'fixed'\n      }\n    }).then(response => response.data).then(data => dispatch({\n      type: 'Remove_Todo',\n      index: id\n    })).catch(err => dispatch({\n      type: \"ERROR\",\n      msg: \"FAILED\"\n    }));\n  };\n}\nexport function fetchtodo() {\n  return dispatch => {\n    return axios.get('todo', {\n      headers: {\n        'csrf-token': 'casw',\n        'x-Gateway-Apikey': 'fixed'\n      }\n    }).then(response => response.data).then(data => dispatch({\n      type: \"GET_Todo\",\n      todos: data\n    })).catch(err => dispatch({\n      type: \"ERROR\",\n      msg: \"FAILED\"\n    }));\n  };\n}\n\nconst _addTodo = todo => ({\n  type: 'Add_Todo',\n  todo\n});\n\nexport const addTodo = (todoData = {\n  id: '',\n  item: ''\n}) => {\n  return dispatch => {\n    const todo = {\n      id: todoData.id,\n      item: todoData.item\n    };\n    return axios.post('/', todo).then(result => {\n      dispatch(_addTodo(result.data));\n    });\n  };\n};\n/*\nexport function removeTodo(index){\n  return{\n    type:'Remove todo',\n    index:index\n  }\n}\n*/\n\nexport function editTodo(index, todo) {\n  console.log('additem' + todo);\n  return {\n    type: 'edit_Todo',\n    todo: todo,\n    index: index\n  };\n} //export default removePost,addPost","map":{"version":3,"sources":["/Users/mayarashwan/Desktop/BootCamp/TODO-List/client/src/action/todos.js"],"names":["axios","GET_Todo","Remove_Todo","getTodos","todos","console","log","type","Removetodo","dispatch","delete","id","headers","then","response","data","index","catch","err","msg","fetchtodo","get","_addTodo","todo","addTodo","todoData","item","post","result","editTodo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,EAAkBC,WAAlB,QAAoC,0BAApC;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACE,SAAO;AACHG,IAAAA,IAAI,EAAE,UADH;AAEHH,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAKH;;AAED,OAAO,SAASI,UAAT,GAAqB;AACxB,SAAOC,QAAQ,IAAI;AACf,WAAOT,KAAK,CAACU,MAAN,CAAc,SAAQC,EAAG,EAAzB,EAA2B;AAACC,MAAAA,OAAO,EAAE;AAAE,sBAAa,MAAf;AAAsB,4BAAmB;AAAzC;AAAV,KAA3B,EACRC,IADQ,CACHC,QAAQ,IAAIA,QAAQ,CAACC,IADlB,EAENF,IAFM,CAECE,IAAD,IAAUN,QAAQ,CAC3B;AACEF,MAAAA,IAAI,EAAC,aADP;AAEES,MAAAA,KAAK,EAACL;AAFR,KAD2B,CAFlB,EAMLM,KANK,CAMCC,GAAG,IAAIT,QAAQ,CAAC;AACtBF,MAAAA,IAAI,EAAE,OADgB;AACPY,MAAAA,GAAG,EAAE;AADE,KAAD,CANhB,CAAP;AAQL,GATC;AAUH;AAED,OAAO,SAASC,SAAT,GAAoB;AACvB,SAAOX,QAAQ,IAAI;AACf,WAAOT,KAAK,CAACqB,GAAN,CAAU,MAAV,EAAiB;AAACT,MAAAA,OAAO,EAAE;AAAE,sBAAa,MAAf;AAAsB,4BAAmB;AAAzC;AAAV,KAAjB,EACRC,IADQ,CACHC,QAAQ,IAAIA,QAAQ,CAACC,IADlB,EAENF,IAFM,CAECE,IAAD,IAAUN,QAAQ,CAC3B;AAGEF,MAAAA,IAAI,EAAE,UAHR;AAGoBH,MAAAA,KAAK,EAAEW;AAH3B,KAD2B,CAFlB,EAM0BE,KAN1B,CAMgCC,GAAG,IAAIT,QAAQ,CAAC;AACrDF,MAAAA,IAAI,EAAE,OAD+C;AACtCY,MAAAA,GAAG,EAAE;AADiC,KAAD,CAN/C,CAAP;AAQL,GATC;AAUH;;AACD,MAAMG,QAAQ,GAAIC,IAAD,KAAW;AACxBhB,EAAAA,IAAI,EAAE,UADkB;AAExBgB,EAAAA;AAFwB,CAAX,CAAjB;;AAMA,OAAO,MAAMC,OAAO,GAAG,CAACC,QAAQ,GAAG;AAC/Bd,EAAAA,EAAE,EAAE,EAD2B;AAE/Be,EAAAA,IAAI,EAAE;AAFyB,CAAZ,KAIjB;AACF,SAAQjB,QAAD,IAAc;AACjB,UAAMc,IAAI,GAAG;AACTZ,MAAAA,EAAE,EAAEc,QAAQ,CAACd,EADJ;AAETe,MAAAA,IAAI,EAAED,QAAQ,CAACC;AAFN,KAAb;AAKA,WAAO1B,KAAK,CAAC2B,IAAN,CAAW,GAAX,EAAgBJ,IAAhB,EAAsBV,IAAtB,CAA2Be,MAAM,IAAI;AACxCnB,MAAAA,QAAQ,CAACa,QAAQ,CAACM,MAAM,CAACb,IAAR,CAAT,CAAR;AACH,KAFM,CAAP;AAGH,GATD;AAUH,CAfM;AAmBP;;;;;;;;;AAQE,OAAO,SAASc,QAAT,CAAkBb,KAAlB,EAAwBO,IAAxB,EAA6B;AAC9BlB,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAWiB,IAAvB;AACJ,SAAM;AACJhB,IAAAA,IAAI,EAAC,WADD;AAEJgB,IAAAA,IAAI,EAACA,IAFD;AAGJP,IAAAA,KAAK,EAACA;AAHF,GAAN;AAMD,C,CAGF","sourcesContent":["import axios from '../axios/axios';\nimport  {GET_Todo,Remove_Todo} from '../constants/actionTypes';\nfunction getTodos(todos){\n  console.log(\"todos\")\n\n  console.log(todos)\n    return {\n        type: 'GET_Todo',\n        todos: todos\n    }\n\n}\n\nexport function Removetodo(){\n    return dispatch => {\n        return axios.delete(`books/${id}`,{headers: { 'csrf-token':'casw','x-Gateway-Apikey':'fixed' }})\n      .then(response => response.data)\n        .then( (data) => dispatch(\n      {\n        type:'Remove_Todo',\n        index:id\n      })).catch(err => dispatch({\n          type: \"ERROR\", msg: \"FAILED\"}))\n  }\n}\n\nexport function fetchtodo(){\n    return dispatch => {\n        return axios.get('todo',{headers: { 'csrf-token':'casw','x-Gateway-Apikey':'fixed' }})\n      .then(response => response.data)\n        .then( (data) => dispatch(\n      {\n\n\n        type: \"GET_Todo\", todos: data})).catch(err => dispatch({\n          type: \"ERROR\", msg: \"FAILED\"}))\n  }\n}\nconst _addTodo = (todo) => ({\n    type: 'Add_Todo',\n    todo\n});\n\n\nexport const addTodo = (todoData = {\n    id: '',\n    item: '',\n\n}) => {\n    return (dispatch) => {\n        const todo = {\n            id: todoData.id,\n            item: todoData.item,\n        };\n\n        return axios.post('/', todo).then(result => {\n            dispatch(_addTodo(result.data));\n        });\n    };\n};\n\n\n\n/*\nexport function removeTodo(index){\n  return{\n    type:'Remove todo',\n    index:index\n  }\n}\n*/\n  export function editTodo(index,todo){\n        console.log('additem'+ todo)\n    return{\n      type:'edit_Todo',\n      todo:todo,\n      index:index\n\n    }\n  }\n\n\n //export default removePost,addPost\n"]},"metadata":{},"sourceType":"module"}