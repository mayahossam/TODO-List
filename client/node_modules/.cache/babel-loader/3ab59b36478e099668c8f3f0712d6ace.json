{"ast":null,"code":"import axios from '../axios/axios';\nimport { GET_Todo } from '../constants/actionTypes';\n\nfunction getTodos(todos) {\n  return {\n    type: 'GET_Todo',\n    todos: todos\n  };\n}\n\nexport function fetchtodo() {\n  return dispatch => {\n    return axios.get('todo', {\n      headers: {\n        'csrf-token': 'casw',\n        'x-Gateway-Apikey': 'fixed'\n      }\n    }).then(response => response.json()).then(data => dispatch(getTodos(data.data))).catch(e => console.log(e));\n  };\n}\n\nconst _addTodo = todo => ({\n  type: 'Add_Todo',\n  todo\n});\n\nexport const addTodo = (todoData = {\n  id: '',\n  item: ''\n}) => {\n  return dispatch => {\n    const todo = {\n      id: todoData.id,\n      item: todoData.item\n    };\n    return axios.post('/', todo).then(result => {\n      dispatch(_addTodo(result.data));\n    });\n  };\n};\n\nconst _getTodos = todos => ({\n  type: 'GET_Todos',\n  todos\n});\n/*\nexport const getTodos = () => {\n\n    return (dispatch) => {\n        console.log(\"GETTING DATA FROM NODE\");\n        return axios.get('todo',{headers: { 'csrf-token':'casw','x-Gateway-Apikey':'fixed' }})\n        .then(response => response.json())\n        .then(json => dispatch(\n            {\n              type: \"GET_DATA\", todos: json})).catch(err => dispatch({\n                type: \"ERROR\", msg: \"FAILED\"}))\n        }\n      }\n    //    .then( (response) => response )\n                //.then( (data) => dispatch(newsReceived(data.data)))\n      //                  .then( (data) => dispatch(_getTodos(data.data)))\n  //  };\n//};\n*/\n\n\nexport function removeTodo(index) {\n  return {\n    type: 'Remove todo',\n    index: index\n  };\n}\nexport function editTodo(index, todo) {\n  console.log('additem' + todo);\n  return {\n    type: 'edit_Todo',\n    todo: todo,\n    index: index\n  };\n} //export default removePost,addPost","map":{"version":3,"sources":["/Users/mayarashwan/Desktop/BootCamp/TODO-List/client/src/action/todos.js"],"names":["axios","GET_Todo","getTodos","todos","type","fetchtodo","dispatch","get","headers","then","response","json","data","catch","e","console","log","_addTodo","todo","addTodo","todoData","id","item","post","result","_getTodos","removeTodo","index","editTodo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,QAAwB,0BAAxB;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACpB,SAAO;AACHC,IAAAA,IAAI,EAAE,UADH;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH;;AACD,OAAO,SAASE,SAAT,GAAoB;AACvB,SAAOC,QAAQ,IAAI;AACf,WAAON,KAAK,CAACO,GAAN,CAAU,MAAV,EAAiB;AAACC,MAAAA,OAAO,EAAE;AAAE,sBAAa,MAAf;AAAsB,4BAAmB;AAAzC;AAAV,KAAjB,EACNC,IADM,CACCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADd,EAENF,IAFM,CAECG,IAAD,IAAUN,QAAQ,CAACJ,QAAQ,CAACU,IAAI,CAACA,IAAN,CAAT,CAFlB,EAGNC,KAHM,CAGEC,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAHR,CAAP;AAIH,GALD;AAMH;;AAED,MAAMG,QAAQ,GAAIC,IAAD,KAAW;AACxBd,EAAAA,IAAI,EAAE,UADkB;AAExBc,EAAAA;AAFwB,CAAX,CAAjB;;AAMA,OAAO,MAAMC,OAAO,GAAG,CAACC,QAAQ,GAAG;AAC/BC,EAAAA,EAAE,EAAE,EAD2B;AAE/BC,EAAAA,IAAI,EAAE;AAFyB,CAAZ,KAIjB;AACF,SAAQhB,QAAD,IAAc;AACjB,UAAMY,IAAI,GAAG;AACTG,MAAAA,EAAE,EAAED,QAAQ,CAACC,EADJ;AAETC,MAAAA,IAAI,EAAEF,QAAQ,CAACE;AAFN,KAAb;AAKA,WAAOtB,KAAK,CAACuB,IAAN,CAAW,GAAX,EAAgBL,IAAhB,EAAsBT,IAAtB,CAA2Be,MAAM,IAAI;AACxClB,MAAAA,QAAQ,CAACW,QAAQ,CAACO,MAAM,CAACZ,IAAR,CAAT,CAAR;AACH,KAFM,CAAP;AAGH,GATD;AAUH,CAfM;;AAkBP,MAAMa,SAAS,GAAItB,KAAD,KAAY;AAC1BC,EAAAA,IAAI,EAAE,WADoB;AAE1BD,EAAAA;AAF0B,CAAZ,CAAlB;AAKA;;;;;;;;;;;;;;;;;;;;;AAoBA,OAAO,SAASuB,UAAT,CAAoBC,KAApB,EAA0B;AAC/B,SAAM;AACJvB,IAAAA,IAAI,EAAC,aADD;AAEJuB,IAAAA,KAAK,EAACA;AAFF,GAAN;AAID;AAEC,OAAO,SAASC,QAAT,CAAkBD,KAAlB,EAAwBT,IAAxB,EAA6B;AAC9BH,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAWE,IAAvB;AACJ,SAAM;AACJd,IAAAA,IAAI,EAAC,WADD;AAEJc,IAAAA,IAAI,EAACA,IAFD;AAGJS,IAAAA,KAAK,EAACA;AAHF,GAAN;AAMD,C,CAGF","sourcesContent":["import axios from '../axios/axios';\nimport  {GET_Todo} from '../constants/actionTypes';\nfunction getTodos(todos){\n    return {\n        type: 'GET_Todo',\n        todos: todos\n    }\n}\nexport function fetchtodo(){\n    return dispatch => {\n        return axios.get('todo',{headers: { 'csrf-token':'casw','x-Gateway-Apikey':'fixed' }})\n        .then( (response) => response.json() )\n        .then( (data) => dispatch(getTodos(data.data)))\n        .catch( (e) => console.log(e) );\n    }\n}\n\nconst _addTodo = (todo) => ({\n    type: 'Add_Todo',\n    todo\n});\n\n\nexport const addTodo = (todoData = {\n    id: '',\n    item: '',\n\n}) => {\n    return (dispatch) => {\n        const todo = {\n            id: todoData.id,\n            item: todoData.item,\n        };\n\n        return axios.post('/', todo).then(result => {\n            dispatch(_addTodo(result.data));\n        });\n    };\n};\n\n\nconst _getTodos = (todos) => ({\n    type: 'GET_Todos',\n    todos\n}\n);\n/*\nexport const getTodos = () => {\n\n    return (dispatch) => {\n        console.log(\"GETTING DATA FROM NODE\");\n        return axios.get('todo',{headers: { 'csrf-token':'casw','x-Gateway-Apikey':'fixed' }})\n        .then(response => response.json())\n        .then(json => dispatch(\n            {\n              type: \"GET_DATA\", todos: json})).catch(err => dispatch({\n                type: \"ERROR\", msg: \"FAILED\"}))\n        }\n      }\n    //    .then( (response) => response )\n                //.then( (data) => dispatch(newsReceived(data.data)))\n      //                  .then( (data) => dispatch(_getTodos(data.data)))\n  //  };\n//};\n*/\n\nexport function removeTodo(index){\n  return{\n    type:'Remove todo',\n    index:index\n  }\n}\n\n  export function editTodo(index,todo){\n        console.log('additem'+ todo)\n    return{\n      type:'edit_Todo',\n      todo:todo,\n      index:index\n\n    }\n  }\n\n\n //export default removePost,addPost\n"]},"metadata":{},"sourceType":"module"}