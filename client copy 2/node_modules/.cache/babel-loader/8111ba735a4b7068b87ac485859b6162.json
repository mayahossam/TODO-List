{"ast":null,"code":"var _jsxFileName = \"/Users/mayarashwan/Desktop/BootCamp/TODO-List/client/src/Components/Todo.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Button, TextInput } from \"carbon-components-react\";\nimport { connect } from 'react-redux';\nimport { removeTodo } from '../action/todos';\nexport default class Todo extends Component {\n  //console.log(props.todos);\n  constructor() {\n    super();\n    this.state = {\n      editing: false,\n      id: ''\n    };\n  }\n\n  handleEditing(event) {\n    //console.log(todo.id);\n    this.setState({\n      editing: true,\n      id: this.props.id\n    });\n    var item = event.target.value; //  this.flag.editing=true ;\n    //  console.log(this.flag.editing);\n  }\n\n  handleEditingDone(event) {\n    console.log(this.props.id);\n\n    if (event.keyCode === 13) {\n      // submit\n      this.setState({\n        editing: false\n      });\n    }\n\n    var item = event.target.value;\n\n    if (item) {\n      var todo = [{\n        id: this.props.id,\n        item: item\n      }];\n      console.log('done', todo); //this.setState( {id: Number(new Date()),\n      //      item:item}\n      //})\n      //  this.props.onHistory.push('/')\n\n      this.props.addTodo(todo, this.props.id);\n      this.props.removeTodo(this.props.index);\n    }\n  }\n\n  handleEditingChange(event) {\n    //console.log(this.props.index);\n    var item = event.target.value;\n\n    if (item) {\n      var todo = [{\n        id: this.props.id,\n        item: item\n      }];\n      console.log('Add', todo); //this.setState( {id: Number(new Date()),\n      //      item:item}\n      //})\n      //  this.props.onHistory.push('/')\n    }\n  }\n\n  render() {\n    const todo = this.props; //const todo=this.props.todo\n\n    console.log(\"editing\");\n    var viewStyle = {};\n    var editStyle = {};\n    console.log(\"editing\");\n\n    if (this.state.editing) {\n      viewStyle.display = 'none';\n    } else {\n      editStyle.display = 'none';\n    }\n\n    console.log(todo);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"landing-page__p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: viewStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/todo/${todo.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, \" \", todo.item, \" \"), /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: () => {\n        dispatch(Removetodo({\n          id\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, \" Remove \"), /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: this.handleEditing.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \" Edit \")), /*#__PURE__*/React.createElement(\"div\", {\n      style: editStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      onChange: this.handleChange,\n      onKeyDown: this.handleEditingDone.bind(this),\n      onChange: this.handleEditingChange.bind(this),\n      id: \"test2\",\n      labelText: \"Add your new item\",\n      placeholder: \"\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 31\n      }\n    })));\n  }\n\n}\n/*\nconst Todo = ({ id, item }) => (\n    <div>\n    <div className=\"landing-page__p\">\n            <div >\n          <Link to=  {`/todo/${id}`}/>\n            <p> {item} </p>\n            <Button size='small' onClick = { () => {\n              //  dispatch(removeTodo({ id }));\n          //  console.log(todo.description)\n        }}> Remove </Button>\n\n        <Button size='small' > Edit </Button>\n            </div>\n            <div >\n\n                        <TextInput\n                          id=\"test2\"\n                          labelText=\"Add your new item\"\n                          placeholder=\"\"\n                          size=\"sm\"\n                        />\n            </div>\n          </div>\n    }\n    </div>\n);\n\nexport default connect()(Todo);\n*/\n//onKeyDown={this.handleEditingDone.bind(this)}\n//onChange={this.handleEditingChange.bind(this)}\n//style={editStyle}","map":{"version":3,"sources":["/Users/mayarashwan/Desktop/BootCamp/TODO-List/client/src/Components/Todo.js"],"names":["React","Component","PropTypes","Link","Button","TextInput","connect","removeTodo","Todo","constructor","state","editing","id","handleEditing","event","setState","props","item","target","value","handleEditingDone","console","log","keyCode","todo","addTodo","index","handleEditingChange","render","viewStyle","editStyle","display","dispatch","Removetodo","bind","handleChange"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\nimport { Button ,TextInput} from \"carbon-components-react\";\n\nimport { connect } from 'react-redux';\nimport { removeTodo } from '../action/todos';\n\nexport default class Todo extends Component {\n  //console.log(props.todos);\n  constructor () {\n   super();\n    this.state = { editing: false,id:'' }\n\n\n}\n\n  handleEditing (event) {\n    //console.log(todo.id);\n    this.setState({ editing:  true,id:this.props.id });\n    var item = event.target.value;\n\n  //  this.flag.editing=true ;\n  //  console.log(this.flag.editing);\n\n  }\n\n  handleEditingDone (event) {\n    console.log(this.props.id);\n\n    if (event.keyCode === 13 ) { // submit\n    this.setState({ editing:  false });\n\n  }\n  var item = event.target.value;\n  if(item ){\n  var todo= [{id: this.props.id,item:item}];\n            console.log('done', todo);\n//this.setState( {id: Number(new Date()),\n//      item:item}\n//})\n//  this.props.onHistory.push('/')\n  this.props.addTodo(todo,this.props.id)\n  this.props.removeTodo(this.props.index)\n\n  }\n\n}\n  handleEditingChange (event) {\n    //console.log(this.props.index);\n    var item = event.target.value;\n\n    if(item ){\n    var todo= [{id: this.props.id,item:item}];\n              console.log('Add', todo);\n  //this.setState( {id: Number(new Date()),\n  //      item:item}\n  //})\n  //  this.props.onHistory.push('/')\n    }\n\n}\n\nrender() {\n  const todo = this.props\n//const todo=this.props.todo\nconsole.log(\"editing\");\n\nvar viewStyle = {};\nvar editStyle = {};\nconsole.log(\"editing\");\n\n\n    if (this.state.editing) {\n      viewStyle.display = 'none';\n    } else {\n      editStyle.display = 'none';\n    }\nconsole.log(todo);\n          return<div className=\"landing-page__p\">\n                  <div style={viewStyle}>\n                <Link to=  {`/todo/${todo.id}`}/>\n                  <p> {todo.item} </p>\n                  <Button size='small' onClick ={() => {\n                      dispatch(Removetodo({ id }));\n                  }}> Remove </Button>\n\n              <Button size='small' onClick ={this.handleEditing.bind(this)\n\n              }> Edit </Button>\n                  </div>\n                  <div style={editStyle}>\n\n                              <TextInput onChange={this.handleChange}\n                              onKeyDown={this.handleEditingDone.bind(this)}\n                      onChange={this.handleEditingChange.bind(this)}\n                                id=\"test2\"\n                                labelText=\"Add your new item\"\n                                placeholder=\"\"\n                                size=\"sm\"\n                              />\n                  </div>\n                </div>\n}\n}\n/*\nconst Todo = ({ id, item }) => (\n    <div>\n    <div className=\"landing-page__p\">\n            <div >\n          <Link to=  {`/todo/${id}`}/>\n            <p> {item} </p>\n            <Button size='small' onClick = { () => {\n              //  dispatch(removeTodo({ id }));\n          //  console.log(todo.description)\n        }}> Remove </Button>\n\n        <Button size='small' > Edit </Button>\n            </div>\n            <div >\n\n                        <TextInput\n                          id=\"test2\"\n                          labelText=\"Add your new item\"\n                          placeholder=\"\"\n                          size=\"sm\"\n                        />\n            </div>\n          </div>\n    }\n    </div>\n);\n\nexport default connect()(Todo);\n*/\n\n//onKeyDown={this.handleEditingDone.bind(this)}\n//onChange={this.handleEditingChange.bind(this)}\n//style={editStyle}\n"]},"metadata":{},"sourceType":"module"}