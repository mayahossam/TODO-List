{"ast":null,"code":"import axios from '../axios/axios';\nimport { GET_Todo } from '../constants/actionTypes';\n\nfunction getTodos(todos) {\n  console.log(\"todos\");\n  console.log(todos);\n  return {\n    type: 'GET_Todo',\n    todos: todos\n  };\n}\n\nexport function Removetodo() {\n  return dispatch => {\n    return axios.delete('todo/index', {\n      headers: {\n        'csrf-token': 'casw',\n        'x-Gateway-Apikey': 'fixed'\n      }\n    }).then(response => response.data).then(data => dispatch({\n      type: 'Remove todo',\n      index: index\n    })).catch(err => dispatch({\n      type: \"ERROR\",\n      msg: \"FAILED\"\n    }));\n  };\n}\nexport function fetchtodo() {\n  return dispatch => {\n    return axios.get('todo', {\n      headers: {\n        'csrf-token': 'casw',\n        'x-Gateway-Apikey': 'fixed'\n      }\n    }).then(response => response.data).then(data => dispatch({\n      type: \"GET_Todo\",\n      todos: data\n    })).catch(err => dispatch({\n      type: \"ERROR\",\n      msg: \"FAILED\"\n    }));\n  };\n}\n\nconst _addTodo = todo => ({\n  type: 'Add_Todo',\n  todo\n});\n\nexport const addTodo = (todoData = {\n  id: '',\n  item: ''\n}) => {\n  return dispatch => {\n    const todo = {\n      id: todoData.id,\n      item: todoData.item\n    };\n    return axios.post('/', todo).then(result => {\n      dispatch(_addTodo(result.data));\n    });\n  };\n};\n/*\nexport function removeTodo(index){\n  return{\n    type:'Remove todo',\n    index:index\n  }\n}\n*/\n\nexport function editTodo(index, todo) {\n  console.log('additem' + todo);\n  return {\n    type: 'edit_Todo',\n    todo: todo,\n    index: index\n  };\n} //export default removePost,addPost","map":{"version":3,"sources":["/Users/mayarashwan/Desktop/BootCamp/TODO-List/client/src/action/todos.js"],"names":["axios","GET_Todo","getTodos","todos","console","log","type","Removetodo","dispatch","delete","headers","then","response","data","index","catch","err","msg","fetchtodo","get","_addTodo","todo","addTodo","todoData","id","item","post","result","editTodo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,QAAwB,0BAAxB;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACE,SAAO;AACHG,IAAAA,IAAI,EAAE,UADH;AAEHH,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAKH;;AACD,OAAO,SAASI,UAAT,GAAqB;AACxB,SAAOC,QAAQ,IAAI;AACf,WAAOR,KAAK,CAACS,MAAN,CAAa,YAAb,EAA0B;AAACC,MAAAA,OAAO,EAAE;AAAE,sBAAa,MAAf;AAAsB,4BAAmB;AAAzC;AAAV,KAA1B,EACRC,IADQ,CACHC,QAAQ,IAAIA,QAAQ,CAACC,IADlB,EAENF,IAFM,CAECE,IAAD,IAAUL,QAAQ,CAC3B;AACJF,MAAAA,IAAI,EAAC,aADD;AAEEQ,MAAAA,KAAK,EAACA;AAFR,KAD2B,CAFlB,EAMLC,KANK,CAMCC,GAAG,IAAIR,QAAQ,CAAC;AACtBF,MAAAA,IAAI,EAAE,OADgB;AACPW,MAAAA,GAAG,EAAE;AADE,KAAD,CANhB,CAAP;AAQL,GATC;AAUH;AACD,OAAO,SAASC,SAAT,GAAoB;AACvB,SAAOV,QAAQ,IAAI;AACf,WAAOR,KAAK,CAACmB,GAAN,CAAU,MAAV,EAAiB;AAACT,MAAAA,OAAO,EAAE;AAAE,sBAAa,MAAf;AAAsB,4BAAmB;AAAzC;AAAV,KAAjB,EACRC,IADQ,CACHC,QAAQ,IAAIA,QAAQ,CAACC,IADlB,EAENF,IAFM,CAECE,IAAD,IAAUL,QAAQ,CAC3B;AAGEF,MAAAA,IAAI,EAAE,UAHR;AAGoBH,MAAAA,KAAK,EAAEU;AAH3B,KAD2B,CAFlB,EAM0BE,KAN1B,CAMgCC,GAAG,IAAIR,QAAQ,CAAC;AACrDF,MAAAA,IAAI,EAAE,OAD+C;AACtCW,MAAAA,GAAG,EAAE;AADiC,KAAD,CAN/C,CAAP;AAQL,GATC;AAUH;;AACD,MAAMG,QAAQ,GAAIC,IAAD,KAAW;AACxBf,EAAAA,IAAI,EAAE,UADkB;AAExBe,EAAAA;AAFwB,CAAX,CAAjB;;AAMA,OAAO,MAAMC,OAAO,GAAG,CAACC,QAAQ,GAAG;AAC/BC,EAAAA,EAAE,EAAE,EAD2B;AAE/BC,EAAAA,IAAI,EAAE;AAFyB,CAAZ,KAIjB;AACF,SAAQjB,QAAD,IAAc;AACjB,UAAMa,IAAI,GAAG;AACTG,MAAAA,EAAE,EAAED,QAAQ,CAACC,EADJ;AAETC,MAAAA,IAAI,EAAEF,QAAQ,CAACE;AAFN,KAAb;AAKA,WAAOzB,KAAK,CAAC0B,IAAN,CAAW,GAAX,EAAgBL,IAAhB,EAAsBV,IAAtB,CAA2BgB,MAAM,IAAI;AACxCnB,MAAAA,QAAQ,CAACY,QAAQ,CAACO,MAAM,CAACd,IAAR,CAAT,CAAR;AACH,KAFM,CAAP;AAGH,GATD;AAUH,CAfM;AAmBP;;;;;;;;;AAQE,OAAO,SAASe,QAAT,CAAkBd,KAAlB,EAAwBO,IAAxB,EAA6B;AAC9BjB,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAWgB,IAAvB;AACJ,SAAM;AACJf,IAAAA,IAAI,EAAC,WADD;AAEJe,IAAAA,IAAI,EAACA,IAFD;AAGJP,IAAAA,KAAK,EAACA;AAHF,GAAN;AAMD,C,CAGF","sourcesContent":["import axios from '../axios/axios';\nimport  {GET_Todo} from '../constants/actionTypes';\nfunction getTodos(todos){\n  console.log(\"todos\")\n\n  console.log(todos)\n    return {\n        type: 'GET_Todo',\n        todos: todos\n    }\n\n}\nexport function Removetodo(){\n    return dispatch => {\n        return axios.delete('todo/index',{headers: { 'csrf-token':'casw','x-Gateway-Apikey':'fixed' }})\n      .then(response => response.data)\n        .then( (data) => dispatch(\n      {\n  type:'Remove todo',\n        index:index\n      })).catch(err => dispatch({\n          type: \"ERROR\", msg: \"FAILED\"}))\n  }\n}\nexport function fetchtodo(){\n    return dispatch => {\n        return axios.get('todo',{headers: { 'csrf-token':'casw','x-Gateway-Apikey':'fixed' }})\n      .then(response => response.data)\n        .then( (data) => dispatch(\n      {\n\n\n        type: \"GET_Todo\", todos: data})).catch(err => dispatch({\n          type: \"ERROR\", msg: \"FAILED\"}))\n  }\n}\nconst _addTodo = (todo) => ({\n    type: 'Add_Todo',\n    todo\n});\n\n\nexport const addTodo = (todoData = {\n    id: '',\n    item: '',\n\n}) => {\n    return (dispatch) => {\n        const todo = {\n            id: todoData.id,\n            item: todoData.item,\n        };\n\n        return axios.post('/', todo).then(result => {\n            dispatch(_addTodo(result.data));\n        });\n    };\n};\n\n\n\n/*\nexport function removeTodo(index){\n  return{\n    type:'Remove todo',\n    index:index\n  }\n}\n*/\n  export function editTodo(index,todo){\n        console.log('additem'+ todo)\n    return{\n      type:'edit_Todo',\n      todo:todo,\n      index:index\n\n    }\n  }\n\n\n //export default removePost,addPost\n"]},"metadata":{},"sourceType":"module"}