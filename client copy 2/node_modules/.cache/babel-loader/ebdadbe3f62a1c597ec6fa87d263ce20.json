{"ast":null,"code":"var _jsxFileName = \"/Users/mayarashwan/Desktop/BootCamp/TODO-List/client/src/Components/App.js\";\n\n/*\nimport Main from './Main'\nimport {connect}from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport * as actions from '../redux/actions'\nimport {withRouter} from 'react-router'\n//import removePost from '../redux/actions'\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport getAppStore from './store/store';\nimport { getTodos } from './action/todos';\nimport './styles/styles.scss';\nimport { Provider } from 'react-redux';\nconst store = getAppStore();\nconst template = /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(AppRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }\n}));\nstore.dispatch(getTodos()).then(() => {\n  ReactDOM.render(template, document.getElementById('app'));\n});\n/*\nfunction mapStateToProps(state){\nreturn{\n  todos: state\n}\n}\nfunction mapDispatchToProps(dispatch) {\nreturn bindActionCreators(actions,dispatch)\n\n}\n//this.props.state\nconst App=withRouter(connect(mapStateToProps,mapDispatchToProps)(Main))\n\nexport default App\n*/","map":{"version":3,"sources":["/Users/mayarashwan/Desktop/BootCamp/TODO-List/client/src/Components/App.js"],"names":["React","ReactDOM","Main","getAppStore","getTodos","Provider","store","template","dispatch","then","render","document","getElementById"],"mappings":";;AAAA;;;;;;;;AASA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAO,sBAAP;AAEA,SAASC,QAAT,QAAyB,aAAzB;AAEA,MAAMC,KAAK,GAAGH,WAAW,EAAzB;AAEA,MAAMI,QAAQ,gBACV,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ;AAMAA,KAAK,CAACE,QAAN,CAAeJ,QAAQ,EAAvB,EAA2BK,IAA3B,CAAgC,MAAM;AAClCR,EAAAA,QAAQ,CAACS,MAAT,CAAgBH,QAAhB,EAA0BI,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAA1B;AACH,CAFD;AAKA","sourcesContent":["/*\nimport Main from './Main'\nimport {connect}from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport * as actions from '../redux/actions'\nimport {withRouter} from 'react-router'\n//import removePost from '../redux/actions'\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main'\nimport getAppStore from './store/store';\nimport { getTodos } from './action/todos';\nimport './styles/styles.scss';\n\nimport { Provider } from 'react-redux';\n\nconst store = getAppStore();\n\nconst template = (\n    <Provider store={store}>\n        <AppRouter />\n    </Provider>\n);\n\nstore.dispatch(getTodos()).then(() => {\n    ReactDOM.render(template, document.getElementById('app'));\n});\n\n\n/*\nfunction mapStateToProps(state){\nreturn{\n  todos: state\n}\n}\nfunction mapDispatchToProps(dispatch) {\nreturn bindActionCreators(actions,dispatch)\n\n}\n//this.props.state\nconst App=withRouter(connect(mapStateToProps,mapDispatchToProps)(Main))\n\nexport default App\n*/\n"]},"metadata":{},"sourceType":"module"}