{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport cx from 'classnames';\nimport { settings } from 'carbon-components';\nimport { Close20, ErrorFilled20, CheckmarkFilled20, WarningFilled20, InformationFilled20 } from '@carbon/icons-react';\nimport Button from '../Button';\nvar prefix = settings.prefix;\nexport function NotificationActionButton(_ref) {\n  var children = _ref.children,\n      customClassName = _ref.className,\n      onClick = _ref.onClick,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"onClick\"]);\n\n  var className = cx(customClassName, \"\".concat(prefix, \"--inline-notification__action-button\"));\n  return React.createElement(Button, _extends({\n    className: className,\n    kind: \"ghost\",\n    onClick: onClick,\n    size: \"small\"\n  }, rest), children);\n}\nNotificationActionButton.propTypes = {\n  /**\n   * Specify an optional className to be applied to the notification action button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the content of the notification action button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Optionally specify a click handler for the notification action button.\n   */\n  onClick: PropTypes.func\n};\nexport function NotificationButton(_ref2) {\n  var _cx, _cx2;\n\n  var ariaLabel = _ref2.ariaLabel,\n      className = _ref2.className,\n      iconDescription = _ref2.iconDescription,\n      type = _ref2.type,\n      IconTag = _ref2.renderIcon,\n      name = _ref2.name,\n      notificationType = _ref2.notificationType,\n      rest = _objectWithoutProperties(_ref2, [\"ariaLabel\", \"className\", \"iconDescription\", \"type\", \"renderIcon\", \"name\", \"notificationType\"]);\n\n  var buttonClassName = cx(className, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--toast-notification__close-button\"), notificationType === 'toast'), _defineProperty(_cx, \"\".concat(prefix, \"--inline-notification__close-button\"), notificationType === 'inline'), _cx));\n  var iconClassName = cx((_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--toast-notification__close-icon\"), notificationType === 'toast'), _defineProperty(_cx2, \"\".concat(prefix, \"--inline-notification__close-icon\"), notificationType === 'inline'), _cx2));\n  return React.createElement(\"button\", _extends({}, rest, {\n    type: type,\n    \"aria-label\": iconDescription,\n    title: iconDescription,\n    className: buttonClassName\n  }), IconTag && React.createElement(IconTag, {\n    \"aria-label\": ariaLabel,\n    className: iconClassName,\n    name: name\n  }));\n}\nNotificationButton.propTypes = {\n  /**\n   * Specify an optional className to be applied to the notification button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify a label to be read by screen readers on the notification button\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * Optional prop to specify the type of the Button\n   */\n  type: PropTypes.string,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Specify an optional icon for the Button through a string,\n   * if something but regular \"close\" icon is desirable\n   */\n  name: PropTypes.string,\n\n  /**\n   * Specify the notification type\n   */\n  notificationType: PropTypes.oneOf(['toast', 'inline'])\n};\nNotificationButton.defaultProps = {\n  ariaLabel: 'close notification',\n  // TODO: deprecate this prop\n  notificationType: 'toast',\n  type: 'button',\n  iconDescription: 'close icon',\n  renderIcon: Close20\n};\nexport function NotificationTextDetails(_ref3) {\n  var title = _ref3.title,\n      subtitle = _ref3.subtitle,\n      caption = _ref3.caption,\n      notificationType = _ref3.notificationType,\n      children = _ref3.children,\n      rest = _objectWithoutProperties(_ref3, [\"title\", \"subtitle\", \"caption\", \"notificationType\", \"children\"]);\n\n  if (notificationType === 'toast') {\n    return React.createElement(\"div\", _extends({}, rest, {\n      className: \"\".concat(prefix, \"--toast-notification__details\")\n    }), React.createElement(\"h3\", {\n      className: \"\".concat(prefix, \"--toast-notification__title\")\n    }, title), React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--toast-notification__subtitle\")\n    }, subtitle), React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--toast-notification__caption\")\n    }, caption), children);\n  }\n\n  if (notificationType === 'inline') {\n    return React.createElement(\"div\", _extends({}, rest, {\n      className: \"\".concat(prefix, \"--inline-notification__text-wrapper\")\n    }), React.createElement(\"p\", {\n      className: \"\".concat(prefix, \"--inline-notification__title\")\n    }, title), React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--inline-notification__subtitle\")\n    }, subtitle), children);\n  }\n}\nNotificationTextDetails.propTypes = {\n  /**\n   * Pass in the children that will be rendered in NotificationTextDetails\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string,\n\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * Specify the caption\n   */\n  caption: PropTypes.node,\n\n  /**\n   * Specify the notification type\n   */\n  notificationType: PropTypes.oneOf(['toast', 'inline'])\n};\nNotificationTextDetails.defaultProps = {\n  title: 'title',\n  caption: 'caption',\n  notificationType: 'toast'\n};\nvar iconTypes = {\n  error: ErrorFilled20,\n  success: CheckmarkFilled20,\n  warning: WarningFilled20,\n  info: InformationFilled20\n};\n\nfunction NotificationIcon(_ref4) {\n  var iconDescription = _ref4.iconDescription,\n      kind = _ref4.kind,\n      notificationType = _ref4.notificationType;\n  var IconForKind = iconTypes[kind];\n\n  if (!IconForKind) {\n    return null;\n  }\n\n  return React.createElement(IconForKind, {\n    className: \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__icon\")\n  }, React.createElement(\"title\", null, iconDescription));\n}\n\nNotificationIcon.propTypes = {\n  notificationType: PropTypes.oneOf(['inline', 'toast']).isRequired,\n  kind: PropTypes.oneOf(['error', 'success', 'warning', 'info']).isRequired,\n  iconDescription: PropTypes.string.isRequired\n};\nexport function ToastNotification(_ref5) {\n  var _cx3;\n\n  var role = _ref5.role,\n      notificationType = _ref5.notificationType,\n      onCloseButtonClick = _ref5.onCloseButtonClick,\n      iconDescription = _ref5.iconDescription,\n      statusIconDescription = _ref5.statusIconDescription,\n      className = _ref5.className,\n      caption = _ref5.caption,\n      subtitle = _ref5.subtitle,\n      title = _ref5.title,\n      kind = _ref5.kind,\n      lowContrast = _ref5.lowContrast,\n      hideCloseButton = _ref5.hideCloseButton,\n      children = _ref5.children,\n      timeout = _ref5.timeout,\n      rest = _objectWithoutProperties(_ref5, [\"role\", \"notificationType\", \"onCloseButtonClick\", \"iconDescription\", \"statusIconDescription\", \"className\", \"caption\", \"subtitle\", \"title\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"children\", \"timeout\"]);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var containerClassName = cx(className, (_cx3 = {}, _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification\"), true), _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification--low-contrast\"), lowContrast), _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification--\").concat(kind), kind), _cx3));\n\n  function handleCloseButtonClick(event) {\n    setIsOpen(false);\n    onCloseButtonClick(event);\n  }\n\n  useEffect(function () {\n    if (!timeout) {\n      return;\n    }\n\n    var timeoutId = window.setTimeout(function () {\n      setIsOpen(false);\n      onCloseButtonClick(event);\n    }, timeout);\n    return function () {\n      window.clearTimeout(timeoutId);\n    };\n  }, [onCloseButtonClick, timeout]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return React.createElement(\"div\", _extends({}, rest, {\n    role: role,\n    kind: kind,\n    className: containerClassName\n  }), React.createElement(NotificationIcon, {\n    notificationType: notificationType,\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), React.createElement(NotificationTextDetails, {\n    title: title,\n    subtitle: subtitle,\n    caption: caption,\n    notificationType: notificationType\n  }, children), !hideCloseButton && React.createElement(NotificationButton, {\n    iconDescription: iconDescription,\n    notificationType: notificationType,\n    onClick: handleCloseButtonClick\n  }));\n}\nToastNotification.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the ToastNotification\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n\n  /**\n   * Specify whether you are using the low contrast variant of the ToastNotification.\n   */\n  lowContrast: PropTypes.bool,\n\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string.isRequired,\n\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * By default, this value is \"alert\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side\n   */\n  role: PropTypes.string.isRequired,\n\n  /**\n   * Specify the caption\n   */\n  caption: PropTypes.node,\n\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onCloseButtonClick: PropTypes.func,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n\n  /**\n   * By default, this value is \"toast\". You can also provide an alternate type\n   * if it makes sense for the underlying `<NotificationTextDetails>` and `<NotificationButton>`\n   */\n  notificationType: PropTypes.string,\n\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n\n  /**\n   * Specify an optional duration the notification should be closed in\n   */\n  timeout: PropTypes.number\n};\nToastNotification.defaultProps = {\n  kind: 'error',\n  title: 'provide a title',\n  caption: 'provide a caption',\n  role: 'alert',\n  notificationType: 'toast',\n  iconDescription: 'closes notification',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false,\n  timeout: 0\n};\nexport function InlineNotification(_ref6) {\n  var _cx4;\n\n  var actions = _ref6.actions,\n      role = _ref6.role,\n      notificationType = _ref6.notificationType,\n      onCloseButtonClick = _ref6.onCloseButtonClick,\n      iconDescription = _ref6.iconDescription,\n      statusIconDescription = _ref6.statusIconDescription,\n      className = _ref6.className,\n      subtitle = _ref6.subtitle,\n      title = _ref6.title,\n      kind = _ref6.kind,\n      lowContrast = _ref6.lowContrast,\n      hideCloseButton = _ref6.hideCloseButton,\n      children = _ref6.children,\n      rest = _objectWithoutProperties(_ref6, [\"actions\", \"role\", \"notificationType\", \"onCloseButtonClick\", \"iconDescription\", \"statusIconDescription\", \"className\", \"subtitle\", \"title\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"children\"]);\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isOpen = _useState4[0],\n      setIsOpen = _useState4[1];\n\n  var containerClassName = cx(className, (_cx4 = {}, _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification\"), true), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--low-contrast\"), lowContrast), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--\").concat(kind), kind), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--hide-close-button\"), hideCloseButton), _cx4));\n\n  function handleCloseButtonClick(event) {\n    setIsOpen(false);\n    onCloseButtonClick(event);\n  }\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return React.createElement(\"div\", _extends({}, rest, {\n    role: role,\n    kind: kind,\n    className: containerClassName\n  }), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__details\")\n  }, React.createElement(NotificationIcon, {\n    notificationType: notificationType,\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), React.createElement(NotificationTextDetails, {\n    title: title,\n    subtitle: subtitle,\n    notificationType: notificationType\n  }, children)), actions, !hideCloseButton && React.createElement(NotificationButton, {\n    iconDescription: iconDescription,\n    notificationType: notificationType,\n    onClick: handleCloseButtonClick\n  }));\n}\nInlineNotification.propTypes = {\n  /**\n   * Pass in the action nodes that will be rendered within the InlineNotification\n   */\n  actions: PropTypes.node,\n\n  /**\n   * Pass in the children that will be rendered within the InlineNotification\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n\n  /**\n   * Specify whether you are using the low contrast variant of the InlineNotification.\n   */\n  lowContrast: PropTypes.bool,\n\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string.isRequired,\n\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * By default, this value is \"alert\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side\n   */\n  role: PropTypes.string.isRequired,\n\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onCloseButtonClick: PropTypes.func,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n\n  /**\n   * By default, this value is \"inline\". You can also provide an alternate type\n   * if it makes sense for the underlying `<NotificationTextDetails>` and `<NotificationButton>`\n   */\n  notificationType: PropTypes.string,\n\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool\n};\nInlineNotification.defaultProps = {\n  role: 'alert',\n  notificationType: 'inline',\n  iconDescription: 'closes notification',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false\n};","map":{"version":3,"sources":["/Users/mayarashwan/Desktop/BootCamp/TODO-List/client/node_modules/carbon-components-react/es/components/Notification/Notification.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","_extends","assign","target","arguments","source","hasOwnProperty","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","PropTypes","React","useState","useEffect","cx","settings","Close20","ErrorFilled20","CheckmarkFilled20","WarningFilled20","InformationFilled20","Button","prefix","NotificationActionButton","_ref","children","customClassName","className","onClick","rest","concat","createElement","kind","size","propTypes","string","node","func","NotificationButton","_ref2","_cx","_cx2","ariaLabel","iconDescription","type","IconTag","renderIcon","name","notificationType","buttonClassName","iconClassName","title","oneOfType","object","oneOf","defaultProps","NotificationTextDetails","_ref3","subtitle","caption","iconTypes","error","success","warning","info","NotificationIcon","_ref4","IconForKind","isRequired","ToastNotification","_ref5","_cx3","role","onCloseButtonClick","statusIconDescription","lowContrast","hideCloseButton","timeout","_useState","_useState2","isOpen","setIsOpen","containerClassName","handleCloseButtonClick","event","timeoutId","window","setTimeout","clearTimeout","bool","number","InlineNotification","_ref6","_cx4","actions","_useState3","_useState4"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport cx from 'classnames';\nimport { settings } from 'carbon-components';\nimport { Close20, ErrorFilled20, CheckmarkFilled20, WarningFilled20, InformationFilled20 } from '@carbon/icons-react';\nimport Button from '../Button';\nvar prefix = settings.prefix;\nexport function NotificationActionButton(_ref) {\n  var children = _ref.children,\n      customClassName = _ref.className,\n      onClick = _ref.onClick,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"onClick\"]);\n\n  var className = cx(customClassName, \"\".concat(prefix, \"--inline-notification__action-button\"));\n  return React.createElement(Button, _extends({\n    className: className,\n    kind: \"ghost\",\n    onClick: onClick,\n    size: \"small\"\n  }, rest), children);\n}\nNotificationActionButton.propTypes = {\n  /**\n   * Specify an optional className to be applied to the notification action button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the content of the notification action button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Optionally specify a click handler for the notification action button.\n   */\n  onClick: PropTypes.func\n};\nexport function NotificationButton(_ref2) {\n  var _cx, _cx2;\n\n  var ariaLabel = _ref2.ariaLabel,\n      className = _ref2.className,\n      iconDescription = _ref2.iconDescription,\n      type = _ref2.type,\n      IconTag = _ref2.renderIcon,\n      name = _ref2.name,\n      notificationType = _ref2.notificationType,\n      rest = _objectWithoutProperties(_ref2, [\"ariaLabel\", \"className\", \"iconDescription\", \"type\", \"renderIcon\", \"name\", \"notificationType\"]);\n\n  var buttonClassName = cx(className, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--toast-notification__close-button\"), notificationType === 'toast'), _defineProperty(_cx, \"\".concat(prefix, \"--inline-notification__close-button\"), notificationType === 'inline'), _cx));\n  var iconClassName = cx((_cx2 = {}, _defineProperty(_cx2, \"\".concat(prefix, \"--toast-notification__close-icon\"), notificationType === 'toast'), _defineProperty(_cx2, \"\".concat(prefix, \"--inline-notification__close-icon\"), notificationType === 'inline'), _cx2));\n  return React.createElement(\"button\", _extends({}, rest, {\n    type: type,\n    \"aria-label\": iconDescription,\n    title: iconDescription,\n    className: buttonClassName\n  }), IconTag && React.createElement(IconTag, {\n    \"aria-label\": ariaLabel,\n    className: iconClassName,\n    name: name\n  }));\n}\nNotificationButton.propTypes = {\n  /**\n   * Specify an optional className to be applied to the notification button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify a label to be read by screen readers on the notification button\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * Optional prop to specify the type of the Button\n   */\n  type: PropTypes.string,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Specify an optional icon for the Button through a string,\n   * if something but regular \"close\" icon is desirable\n   */\n  name: PropTypes.string,\n\n  /**\n   * Specify the notification type\n   */\n  notificationType: PropTypes.oneOf(['toast', 'inline'])\n};\nNotificationButton.defaultProps = {\n  ariaLabel: 'close notification',\n  // TODO: deprecate this prop\n  notificationType: 'toast',\n  type: 'button',\n  iconDescription: 'close icon',\n  renderIcon: Close20\n};\nexport function NotificationTextDetails(_ref3) {\n  var title = _ref3.title,\n      subtitle = _ref3.subtitle,\n      caption = _ref3.caption,\n      notificationType = _ref3.notificationType,\n      children = _ref3.children,\n      rest = _objectWithoutProperties(_ref3, [\"title\", \"subtitle\", \"caption\", \"notificationType\", \"children\"]);\n\n  if (notificationType === 'toast') {\n    return React.createElement(\"div\", _extends({}, rest, {\n      className: \"\".concat(prefix, \"--toast-notification__details\")\n    }), React.createElement(\"h3\", {\n      className: \"\".concat(prefix, \"--toast-notification__title\")\n    }, title), React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--toast-notification__subtitle\")\n    }, subtitle), React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--toast-notification__caption\")\n    }, caption), children);\n  }\n\n  if (notificationType === 'inline') {\n    return React.createElement(\"div\", _extends({}, rest, {\n      className: \"\".concat(prefix, \"--inline-notification__text-wrapper\")\n    }), React.createElement(\"p\", {\n      className: \"\".concat(prefix, \"--inline-notification__title\")\n    }, title), React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--inline-notification__subtitle\")\n    }, subtitle), children);\n  }\n}\nNotificationTextDetails.propTypes = {\n  /**\n   * Pass in the children that will be rendered in NotificationTextDetails\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string,\n\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * Specify the caption\n   */\n  caption: PropTypes.node,\n\n  /**\n   * Specify the notification type\n   */\n  notificationType: PropTypes.oneOf(['toast', 'inline'])\n};\nNotificationTextDetails.defaultProps = {\n  title: 'title',\n  caption: 'caption',\n  notificationType: 'toast'\n};\nvar iconTypes = {\n  error: ErrorFilled20,\n  success: CheckmarkFilled20,\n  warning: WarningFilled20,\n  info: InformationFilled20\n};\n\nfunction NotificationIcon(_ref4) {\n  var iconDescription = _ref4.iconDescription,\n      kind = _ref4.kind,\n      notificationType = _ref4.notificationType;\n  var IconForKind = iconTypes[kind];\n\n  if (!IconForKind) {\n    return null;\n  }\n\n  return React.createElement(IconForKind, {\n    className: \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__icon\")\n  }, React.createElement(\"title\", null, iconDescription));\n}\n\nNotificationIcon.propTypes = {\n  notificationType: PropTypes.oneOf(['inline', 'toast']).isRequired,\n  kind: PropTypes.oneOf(['error', 'success', 'warning', 'info']).isRequired,\n  iconDescription: PropTypes.string.isRequired\n};\nexport function ToastNotification(_ref5) {\n  var _cx3;\n\n  var role = _ref5.role,\n      notificationType = _ref5.notificationType,\n      onCloseButtonClick = _ref5.onCloseButtonClick,\n      iconDescription = _ref5.iconDescription,\n      statusIconDescription = _ref5.statusIconDescription,\n      className = _ref5.className,\n      caption = _ref5.caption,\n      subtitle = _ref5.subtitle,\n      title = _ref5.title,\n      kind = _ref5.kind,\n      lowContrast = _ref5.lowContrast,\n      hideCloseButton = _ref5.hideCloseButton,\n      children = _ref5.children,\n      timeout = _ref5.timeout,\n      rest = _objectWithoutProperties(_ref5, [\"role\", \"notificationType\", \"onCloseButtonClick\", \"iconDescription\", \"statusIconDescription\", \"className\", \"caption\", \"subtitle\", \"title\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"children\", \"timeout\"]);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var containerClassName = cx(className, (_cx3 = {}, _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification\"), true), _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification--low-contrast\"), lowContrast), _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification--\").concat(kind), kind), _cx3));\n\n  function handleCloseButtonClick(event) {\n    setIsOpen(false);\n    onCloseButtonClick(event);\n  }\n\n  useEffect(function () {\n    if (!timeout) {\n      return;\n    }\n\n    var timeoutId = window.setTimeout(function () {\n      setIsOpen(false);\n      onCloseButtonClick(event);\n    }, timeout);\n    return function () {\n      window.clearTimeout(timeoutId);\n    };\n  }, [onCloseButtonClick, timeout]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return React.createElement(\"div\", _extends({}, rest, {\n    role: role,\n    kind: kind,\n    className: containerClassName\n  }), React.createElement(NotificationIcon, {\n    notificationType: notificationType,\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), React.createElement(NotificationTextDetails, {\n    title: title,\n    subtitle: subtitle,\n    caption: caption,\n    notificationType: notificationType\n  }, children), !hideCloseButton && React.createElement(NotificationButton, {\n    iconDescription: iconDescription,\n    notificationType: notificationType,\n    onClick: handleCloseButtonClick\n  }));\n}\nToastNotification.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the ToastNotification\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n\n  /**\n   * Specify whether you are using the low contrast variant of the ToastNotification.\n   */\n  lowContrast: PropTypes.bool,\n\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string.isRequired,\n\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * By default, this value is \"alert\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side\n   */\n  role: PropTypes.string.isRequired,\n\n  /**\n   * Specify the caption\n   */\n  caption: PropTypes.node,\n\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onCloseButtonClick: PropTypes.func,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n\n  /**\n   * By default, this value is \"toast\". You can also provide an alternate type\n   * if it makes sense for the underlying `<NotificationTextDetails>` and `<NotificationButton>`\n   */\n  notificationType: PropTypes.string,\n\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n\n  /**\n   * Specify an optional duration the notification should be closed in\n   */\n  timeout: PropTypes.number\n};\nToastNotification.defaultProps = {\n  kind: 'error',\n  title: 'provide a title',\n  caption: 'provide a caption',\n  role: 'alert',\n  notificationType: 'toast',\n  iconDescription: 'closes notification',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false,\n  timeout: 0\n};\nexport function InlineNotification(_ref6) {\n  var _cx4;\n\n  var actions = _ref6.actions,\n      role = _ref6.role,\n      notificationType = _ref6.notificationType,\n      onCloseButtonClick = _ref6.onCloseButtonClick,\n      iconDescription = _ref6.iconDescription,\n      statusIconDescription = _ref6.statusIconDescription,\n      className = _ref6.className,\n      subtitle = _ref6.subtitle,\n      title = _ref6.title,\n      kind = _ref6.kind,\n      lowContrast = _ref6.lowContrast,\n      hideCloseButton = _ref6.hideCloseButton,\n      children = _ref6.children,\n      rest = _objectWithoutProperties(_ref6, [\"actions\", \"role\", \"notificationType\", \"onCloseButtonClick\", \"iconDescription\", \"statusIconDescription\", \"className\", \"subtitle\", \"title\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"children\"]);\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isOpen = _useState4[0],\n      setIsOpen = _useState4[1];\n\n  var containerClassName = cx(className, (_cx4 = {}, _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification\"), true), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--low-contrast\"), lowContrast), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--\").concat(kind), kind), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--hide-close-button\"), hideCloseButton), _cx4));\n\n  function handleCloseButtonClick(event) {\n    setIsOpen(false);\n    onCloseButtonClick(event);\n  }\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return React.createElement(\"div\", _extends({}, rest, {\n    role: role,\n    kind: kind,\n    className: containerClassName\n  }), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__details\")\n  }, React.createElement(NotificationIcon, {\n    notificationType: notificationType,\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), React.createElement(NotificationTextDetails, {\n    title: title,\n    subtitle: subtitle,\n    notificationType: notificationType\n  }, children)), actions, !hideCloseButton && React.createElement(NotificationButton, {\n    iconDescription: iconDescription,\n    notificationType: notificationType,\n    onClick: handleCloseButtonClick\n  }));\n}\nInlineNotification.propTypes = {\n  /**\n   * Pass in the action nodes that will be rendered within the InlineNotification\n   */\n  actions: PropTypes.node,\n\n  /**\n   * Pass in the children that will be rendered within the InlineNotification\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n\n  /**\n   * Specify whether you are using the low contrast variant of the InlineNotification.\n   */\n  lowContrast: PropTypes.bool,\n\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string.isRequired,\n\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * By default, this value is \"alert\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side\n   */\n  role: PropTypes.string.isRequired,\n\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onCloseButtonClick: PropTypes.func,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n\n  /**\n   * By default, this value is \"inline\". You can also provide an alternate type\n   * if it makes sense for the underlying `<NotificationTextDetails>` and `<NotificationButton>`\n   */\n  notificationType: PropTypes.string,\n\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool\n};\nInlineNotification.defaultProps = {\n  role: 'alert',\n  notificationType: 'inline',\n  iconDescription: 'closes notification',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false\n};"]},"metadata":{},"sourceType":"module"}